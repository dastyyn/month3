# Создано https://www.toptal.com/developers/gitignore/api/python
# Редактировать на https://www.toptal.com/developers/gitignore?templates=python

### Python ###
# Скомпилированные в байтах / оптимизированные / DLL файлы
__pycache__/
*.py[cod]
*$py.class

# Расширения C
*.so

# Дистрибутив / упаковка
.Python
сборка/
разработка-eggs/
dist/
Загрузки/
eggs/
.eggs/
библиотека/
lib64/
части/
sdist/
var/
колеса/
поделиться /python-колеса/
*.egg-info/
.installed.cfg
*.egg
МАНИФЕСТ

# PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед тем, как PyInstaller соберет exe-файл, чтобы ввести в него дату / другую информацию.
*.манифест
* .спецификация

# Журналы установки
pip-log.txt
pip-delete-this-directory.txt

# Модульный тест / отчеты о покрытии
htmlcov/
.токсины/
.nox/
.покрытие
.покрытие.*
.кэш
nosetests.xml
coverage.xml
*.обложка
*.py, обложка
.гипотеза/
.pytest_cache/
обложка/

# Переводы
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-журнал

# Содержимое Flask:
экземпляр/
.webassets-кэш

# Содержимое Scrapy:
.scrapy

# Документация Sphinx
docs/_build/

# PyBuilder
.pybuilder/
цель/

# Записная книжка Jupyter
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-version

# pipenv
# Согласно pypa/pipenv#598, рекомендуется включить Pipfile.заблокировать систему управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей от платформы или
# не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают, или нет
# установите все необходимые зависимости.
#Pipfile.блокировка

# поэзия
# Аналогично Pipfile.lock, обычно рекомендуется включать poetry.блокировка в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и чаще
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
# Аналогично Pipfile.lock, обычно рекомендуется включать pdm.lock в систему управления версиями.
#pdm.lock
# pdm хранит конфигурации всего проекта в .pdm.toml, но рекомендуется не включать его
# в систему управления версиями.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Начинка из сельдерея
celerybeat-расписание
celerybeat.pid

# SageMath проанализировал файлы
*.sage.py

# Среды
.env
.venv
env/
venv/
ENV /
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# документация mkdocs
/сайт

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типов Pyre
.pyre/

# статический анализатор типов pytype
.pytype/

# Символы отладки Cython
cython_debug/

# PyCharm
 Конкретный шаблон # JetBrains поддерживается в отдельном файле JetBrains.gitignore, который можно
# найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и который может быть добавлен в глобальный файл gitignore или объединен в этот файл. Для более эффективного использования
 параметр # (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
.idea/

### Исправление для Python ###
# Файл локальной конфигурации Poetry - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# Файлы конфигурации LSP
pyrightconfig.json

# Конец https://www.toptal.com/developers/gitignore/api/python